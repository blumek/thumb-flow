name: ThumbFlow CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

permissions:
  id-token: write
  contents: read
  pull-requests: write
  deployments: write

jobs:
  determine-environment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Set environment based on branch or PR target
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "master" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

  test-upload-handler:
    name: Test Upload Handler
    uses: ./.github/workflows/aws-lambda-function-test-workflow.yml
    with:
      component-path: src/lambda/upload_handler
      component-name: upload_handler

  test-thumbnail-generator:
    name: Test Thumbnail Generator
    uses: ./.github/workflows/aws-lambda-function-test-workflow.yml
    with:
      component-path: src/lambda/thumbnail_generator
      component-name: thumbnail_generator

  build-upload-handler:
    name: Build Upload Handler
    needs: test-upload-handler
    uses: ./.github/workflows/aws-lambda-function-build-workflow.yml
    with:
      component-path: src/lambda/upload_handler
      component-name: upload-handler
      repository-name: blumek/upload-handler
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

  build-thumbnail-generator:
    name: Build Thumbnail Generator
    needs: test-thumbnail-generator
    uses: ./.github/workflows/aws-lambda-function-build-workflow.yml
    with:
      component-path: src/lambda/thumbnail_generator
      component-name: thumbnail-generator
      repository-name: blumek/thumbnail-generator
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

  terraform-plan:
    name: Terraform Plan (${{ needs.determine-environment.outputs.environment }})
    if: github.event_name == 'pull_request'
    needs: [ determine-environment, build-upload-handler, build-thumbnail-generator ]
    uses: ./.github/workflows/terraform-plan-workflow.yml
    with:
      environment: ${{ needs.determine-environment.outputs.environment }}
      upload-handler-image-uri: ${{ needs.build-upload-handler.outputs.image-uri }}
      thumbnail-generator-image-uri: ${{ needs.build-thumbnail-generator.outputs.image-uri }}
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

  terraform-apply:
    name: Terraform Apply (${{ needs.determine-environment.outputs.environment }})
    if: github.event_name == 'push'
    needs: [ determine-environment, build-upload-handler, build-thumbnail-generator ]
    uses: ./.github/workflows/terraform-apply-workflow.yml
    with:
      environment: ${{ needs.determine-environment.outputs.environment }}
      upload-handler-image-uri: ${{ needs.build-upload-handler.outputs.image-uri }}
      thumbnail-generator-image-uri: ${{ needs.build-thumbnail-generator.outputs.image-uri }}
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
