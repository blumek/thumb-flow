name: Terraform Plan

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to plan for'
        required: true
        type: string
      image-uri:
        description: 'Lambda function image URI'
        required: true
        type: string
    secrets:
      AWS_ROLE_ARN:
        required: true

env:
  AWS_REGION: eu-central-1
  TF_VERSION: '1.12.2'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    name: Terraform Plan (${{ inputs.environment }})
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: terraform/environments/${{ inputs.environment }}
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: terraform/environments/${{ inputs.environment }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: terraform/environments/${{ inputs.environment }}
        run: |
          terraform plan -detailed-exitcode -no-color \
            -var="upload_handler_image_uri=${{ inputs.image-uri }}" \
            -out=tfplan
        continue-on-error: true

      - name: Create Plan Output
        id: plan-output
        working-directory: terraform/environments/${{ inputs.environment }}
        run: |
          terraform show -no-color tfplan > plan.txt
          echo 'PLAN<<EOF' >> $GITHUB_OUTPUT
          cat plan.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan-output.outputs.PLAN }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan for ${{ inputs.environment }}</summary>

            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ inputs.environment }}
          path: terraform/environments/${{ inputs.environment }}/tfplan
          retention-days: 30

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
