name: ThumbFlow CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  determine-environment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

  test-upload-handler:
    name: Test Upload Handler
    uses: ./.github/workflows/aws-lambda-function-test.yml
    with:
      component-path: src/lambda/upload_handler
      component-name: upload-handler

  build-upload-handler:
    name: Build Upload Handler
    needs: test-upload-handler
    uses: ./.github/workflows/aws-lambda-function-build-workflow.yml
    with:
      component-path: src/lambda/upload_handler
      component-name: upload-handler
      repository-name: blumek/upload-handler
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

  terraform-plan:
    name: Terraform Plan
    if: github.event_name == 'pull_request'
    needs: [determine-environment, build-upload-handler]
    uses: ./.github/workflows/terraform-plan.yml
    with:
      environment: ${{ needs.determine-environment.outputs.environment }}
      image-uri: ${{ needs.build-upload-handler.outputs.image-uri }}
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

  terraform-apply:
    name: Terraform Apply
    if: github.event_name == 'push'
    needs: [determine-environment, build-upload-handler]
    uses: ./.github/workflows/terraform-apply.yml
    with:
      environment: ${{ needs.determine-environment.outputs.environment }}
      image-uri: ${{ needs.build-upload-handler.outputs.image-uri }}
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
